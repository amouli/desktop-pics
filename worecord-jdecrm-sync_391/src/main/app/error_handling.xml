<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
   xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
   xmlns:email="http://www.mulesoft.org/schema/mule/email"
   xmlns="http://www.mulesoft.org/schema/mule/core"
   xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
   xmlns:spring="http://www.springframework.org/schema/beans" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    
    
        
    <catch-exception-strategy name="globalCatch_Exception_Strategy">
    <set-payload value="#[sessionVars.queuePayload]" doc:name="Set Input Payload"/>
        <jms:outbound-endpoint queue="${jdeInfo.exceptionQueue}" connector-ref="Active_MQ" doc:name="Exception Payload to Support Queue"/>
         <expression-component doc:name="Set Exception Entry">
         <![CDATA[java.util.Date today = new java.util.Date();
java.util.Map msgObj=new java.util.HashMap();
//System.out.println("exception  :: "+exception+" ----cause   ::    "+exception.cause);
sessionVars.message=sessionVars.message +  " - " + (null==exception?"No exception information available.":exception.cause);

msgObj.put("transactionId",flowVars.msgId);
msgObj.put("statusCode","2");
msgObj.put("timestamp",new java.sql.Timestamp(today.getTime()));
msgObj.put("errorTrace", sessionVars.message);
msgObj.put("errorCode",sessionVars.code);
msgObj.put("inputPayload", sessionVars.queuePayload);
msgObj.put("identifierKey",sessionVars.flowname);

payload=msgObj;

return payload;]]>
   </expression-component>
        <jms:outbound-endpoint queue="ErrorMessageLogEntry" connector-ref="Active_MQ" doc:name="ErrorMessageLogEntry"/>
        <enricher target="#[flowVars.jmsRes]" doc:name="Message Enricher">
            <processor-chain doc:name="Processor Chain">
                <expression-component doc:name="Set TransactionLogUpdate values">
                <![CDATA[java.util.Date today = new java.util.Date();
java.util.Map txnObj=new java.util.HashMap();
txnObj.put("transactionId",flowVars.msgId);
txnObj.put("statusCode","2");
txnObj.put("timestamp",new java.sql.Timestamp(today.getTime()));

payload=txnObj;

return payload;]]>
 </expression-component>
                <jms:outbound-endpoint queue="TransactionLogUpdate" connector-ref="Active_MQ" doc:name="TransactionLogUpdate"/>
            </processor-chain>
        </enricher>
        <flow-ref name="NotificationService-Support" doc:name="NotificationService-Support"/>
        <flow-ref name="globalSub_Flow" doc:name="globalSub_Flow"/>
    </catch-exception-strategy>
    <sub-flow name="globalSub_Flow">
        <set-payload value="{&quot;stausCode&quot;:&quot;#[sessionVars.code]&quot;,&quot;message&quot;:&quot;#[sessionVars.message]&quot;}" doc:name="Set Payload"/>
        <logger message="Final status  is  :: #[payload]" level="INFO" doc:name="Final Status"/>
    </sub-flow>
    <sub-flow name="NotificationService-Support">
        <object-to-string-transformer doc:name="Object to String"/>
        <parse-template location="ExceptionTemplate.html" doc:name="Parse Template"/>
         <smtp:outbound-endpoint host="${smtp.host}" responseTimeout="10000" doc:name="SMTP-EQUUS" bcc="${email.bcc.list}" cc="${email.cc.list}" connector-ref="SMTP" from="${email.from}" port="${smtp.port}" subject="${email_subject}(${env.name})" to="${email.to}"  />
              
    </sub-flow>
    
    

</mule>
